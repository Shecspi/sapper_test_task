Решение тестового задания согласно ТЗ, описанному по ссылке https://minesweeper-test.studiotg.ru/swagger/

Кандидат - Вавилов Егор

Для решения поставленной задачи я использовал фреймворк FastAPI,
с помощью которого реализовал два эндпоинта - /api/new и /api/turn.
В задании не было указано, как именно следует хранить состояние игры между запросами, поэтому я оставил выбор рза собой.
Программа использует модуль pickle для сериализации данных на диск и последующего их использования.
Данные сохраняются в папку data, которая автоматически создаётся в корневом уровне приложения.

Описание файлов:
 * main.py - реализация двух эндпоинтов
 * src/models.py - модели Pydantic и структура для хранения состояния игры
 * src/utils.py - вспомогательные функции, необходимые для работы эндпоинтов
 * src/http_haandlers.py - обработчики для различных кодов HTTP-запросов
   (сейчас только один, но в реальном проекте их могло быть большое)
 * src/cors.py - настройки, необходимые для того, чтобы работали запросы между
   бэкэндом и фронтэндом, находящимися на разных серверах.
 * src/config.py - настройки проекта